{
    "collab_server" : "",
    "contents" : "# Homework 10\n\nThis is my homework 10. It is an automated workflow that takes that uses the `rarxiv` and `gender` packages from rOpenSci to find all of the journal articles submitted to [arxiv](http://arxiv.org/) in the last week and tell you the gender breakdown of the authors of the papers (i.e. how many male and female authors). Futhermore, it uses the `rvest` package to scrap the [arxiv](http://arxiv.org/) website for the bibligographic information for each journal article. \n\nThis workflow produces two plots:\n\n\t* plot_of_number_of_male_and_female_authors.png\n\t* plot_of_numeber_of_male_and_female_first_authors.png\n\nAnd a table: arxiv_papers_author_gender.csv. This table tells you how many male and female authors were on each paper.\n\n## Important info\n\nYou need to have the following packages installed:\n\n\t* `aRxiv`\n\t* `gender`\n\t* `dplyr`\n\t* `tidyr`\n\t* `stringr`\n\t* `readr`\n\t* `ggplot2`\n\t* `rvest`\n\nMost of the packages you will have already install from class. The one package you will probably need to install is `aRxiv`.\n\nYou can install the package with the command `devtools::install_github()`\n\nYou can find out more about the package at this [link](https://ropensci.org/tutorials/arxiv_tutorial.html)\n\n## Running the workflow\n\nBecause around 3000 articles are submitted to arxiv each month I limited the number of articles that are returned to 15. If you want to change this you need to change the variable `article_limit` in the file called `1_get_data.R`. Even with only 15 articles that workflow will take a couple of minutes to complete. I tried running the workflow with no limits on the number of articles (i.e. all of the journal articles submitted in the last week) and it took about 1 hour to run!\n\nSuggested workflows:\n\n  * Clone this directory. \n  * Start a fresh RStudio session, make sure this directory is the working directory.\n  * Run the Makefile using Rstudio's \"Build All\" button.\n  * Or, in a shell, use the command: `make all`\n  * `make clean` can be used to delete all the files generated by `make all`\n  * You can delete various intermediates \"by hand\" and use `make all` to re-run necessary parts of the pipeline.\n",
    "created" : 1449273305483.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1416790260",
    "id" : "C943ABE",
    "lastKnownWriteTime" : 1449274457,
    "path" : "~/SpiderOak Hive/Class/STAT545A/hw10/README.md",
    "project_path" : "README.md",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}